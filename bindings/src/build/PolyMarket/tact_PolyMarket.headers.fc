;;
;; Header files for PolyMarket
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $JettonTransferNotification$_load
(slice, ((int, int, slice, slice))) $JettonTransferNotification$_load(slice sc_0) inline;

;; $JettonExcesses$_load
(slice, ((int))) $JettonExcesses$_load(slice sc_0) inline;

;; $Destination$_store
builder $Destination$_store(builder build_0, (int, int, int) v) inline;

;; $Destination$_store_cell
cell $Destination$_store_cell((int, int, int) v) inline;

;; $Payload$_store
builder $Payload$_store(builder build_0, (cell, cell) v) inline;

;; $ExecutionInfo$_store
builder $ExecutionInfo$_store(builder build_0, (int, int, (cell, cell)) v) inline;

;; $SkateInitiateTaskNotification$_store
builder $SkateInitiateTaskNotification$_store(builder build_0, (int, slice, (int, int, (cell, cell))) v) inline;

;; $SkateInitiateTaskNotification$_store_cell
cell $SkateInitiateTaskNotification$_store_cell((int, slice, (int, int, (cell, cell))) v) inline;

;; $RequestPlaceBet$_store
builder $RequestPlaceBet$_store(builder build_0, (int, int, int) v) inline;

;; $RequestPlaceBet$_store_cell
cell $RequestPlaceBet$_store_cell((int, int, int) v) inline;

;; $BetConfig$_load
(slice, ((int, int))) $BetConfig$_load(slice sc_0) inline;

;; $BetConfig$_load_not_mut
((int, int)) $BetConfig$_load_not_mut(slice sc_0) inline;

;; $SettleBet$_load
(slice, ((int, slice, slice, int))) $SettleBet$_load(slice sc_0) inline;

;; $RequestSettleBet$_store
builder $RequestSettleBet$_store(builder build_0, (int, int, int) v) inline;

;; $RequestSettleBet$_store_cell
cell $RequestSettleBet$_store_cell((int, int, int) v) inline;

;; $RequestSettleBet$_load
(slice, ((int, int, int))) $RequestSettleBet$_load(slice sc_0) inline;

;; $SetJettonWallet$_load
(slice, ((slice))) $SetJettonWallet$_load(slice sc_0) inline;

;; $TopUpTON$_load
(slice, (tuple)) $TopUpTON$_load(slice sc_0) inline;

;; $WithdrawTON$_load
(slice, (tuple)) $WithdrawTON$_load(slice sc_0) inline;

;; $PolyMarket$_store
builder $PolyMarket$_store(builder build_0, (slice, slice, int, int, int, int, slice, int) v) inline;

;; $PolyMarket$_load
(slice, ((slice, slice, int, int, int, int, slice, int))) $PolyMarket$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $PolyMarket$init$_load
(slice, ((slice, slice))) $PolyMarket$init$_load(slice sc_0) inline;

;; $PolyMarket$_contract_init
(slice, slice, int, int, int, int, slice, int) $PolyMarket$_contract_init(slice $owner, slice $skate_gateway) impure inline_ref;

;; $PolyMarket$_contract_load
(slice, slice, int, int, int, int, slice, int) $PolyMarket$_contract_load() impure inline_ref;

;; $PolyMarket$_contract_store
() $PolyMarket$_contract_store((slice, slice, int, int, int, int, slice, int) v) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $PolyMarket$_fun_queryId
((slice, slice, int, int, int, int, slice, int), int) $PolyMarket$_fun_queryId((slice, slice, int, int, int, int, slice, int) $self) impure inline_ref;

;; $PolyMarket$_fun_gateway
((slice, slice, int, int, int, int, slice, int), slice) $PolyMarket$_fun_gateway((slice, slice, int, int, int, int, slice, int) $self) impure inline_ref;

;; $PolyMarket$_fun_jettonWallet
((slice, slice, int, int, int, int, slice, int), slice) $PolyMarket$_fun_jettonWallet((slice, slice, int, int, int, int, slice, int) $self) impure inline_ref;

;; $SkateInitiateTask$_constructor_query_id_user_processing_fee_execution_info
((int, slice, int, (int, int, (cell, cell)))) $SkateInitiateTask$_constructor_query_id_user_processing_fee_execution_info(int query_id, slice user, int processing_fee, (int, int, (cell, cell)) execution_info) inline;

;; $ExecutionInfo$_constructor_value_expiration_payload
((int, int, (cell, cell))) $ExecutionInfo$_constructor_value_expiration_payload(int value, int expiration, (cell, cell) payload) inline;

;; $Payload$_constructor_destination_data
((cell, cell)) $Payload$_constructor_destination_data(cell destination, cell data) inline;

;; $Destination$_constructor_chain_id_chain_type_address
((int, int, int)) $Destination$_constructor_chain_id_chain_type_address(int chain_id, int chain_type, int address) inline;

;; $PolyMarket$_fun_construct_initiate_params
((slice, slice, int, int, int, int, slice, int), (int, slice, int, (int, int, (cell, cell)))) $PolyMarket$_fun_construct_initiate_params((slice, slice, int, int, int, int, slice, int) $self, int $query_id, slice $user, cell $execution_data) impure inline;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $PolyMarket$_fun_forward
((slice, slice, int, int, int, int, slice, int), ()) $PolyMarket$_fun_forward((slice, slice, int, int, int, int, slice, int) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline_ref;

;; $PolyMarket$_fun_notify
((slice, slice, int, int, int, int, slice, int), ()) $PolyMarket$_fun_notify((slice, slice, int, int, int, int, slice, int) $self, cell $body) impure inline;

;; $SendParameters$_constructor_to_value_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_body(slice to, int value, int mode, cell body) inline;

;; $SkateInitiateTaskNotification$_constructor_query_id_user_execution_info
((int, slice, (int, int, (cell, cell)))) $SkateInitiateTaskNotification$_constructor_query_id_user_execution_info(int query_id, slice user, (int, int, (cell, cell)) execution_info) inline;

;; $PolyMarket$_fun_notify_gateway
((slice, slice, int, int, int, int, slice, int), ()) $PolyMarket$_fun_notify_gateway((slice, slice, int, int, int, int, slice, int) $self, (int, slice, int, (int, int, (cell, cell))) $initiate_params) impure inline;

;; $PolyMarket$_fun_only_gateway
((slice, slice, int, int, int, int, slice, int), ()) $PolyMarket$_fun_only_gateway((slice, slice, int, int, int, int, slice, int) $self) impure inline;

;; $PolyMarket$_fun_requireOwner
((slice, slice, int, int, int, int, slice, int), ()) $PolyMarket$_fun_requireOwner((slice, slice, int, int, int, int, slice, int) $self) impure inline_ref;

;; $PolyMarket$_fun_owner
((slice, slice, int, int, int, int, slice, int), slice) $PolyMarket$_fun_owner((slice, slice, int, int, int, int, slice, int) $self) impure inline_ref;

;; $SendParameters$_constructor_to_value_mode
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode(slice to, int value, int mode) inline;

;; $RequestPlaceBet$_constructor_candidate_id_usd_amount_direction
((int, int, int)) $RequestPlaceBet$_constructor_candidate_id_usd_amount_direction(int candidate_id, int usd_amount, int direction) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
